/*
 * dielectronTree.h
 *
 *      Author: Kaya Tatar
 *
 *       class to manage dielectron tree, tree of electron pairs
 */

#ifndef TREEHEADERS_DIELECTRONTREE_H_
#define TREEHEADERS_DIELECTRONTREE_H_

#include <TLorentzVector.h>

#include <vector>

#include "ggHiNtuplizerTree.h"

class dielectron {
public :
  dielectron(){
      mass = 0.000511;

      eleCharge_1 = 0;
      eleChargeConsistent_1 = 0;
      eleEn_1 = 0;
      eleD0_1 = 0;
      eleDz_1 = 0;
      eleD0Err_1 = 0;
      eleDzErr_1 = 0;
      eleTrkPt_1 = 0;
      eleTrkEta_1 = 0;
      eleTrkPhi_1 = 0;
      eleTrkCharge_1 = 0;
      eleTrkChi2_1 = 0;
      eleTrkNdof_1 = 0;
      eleTrkNormalizedChi2_1 = 0;
      elePt_1 = 0;
      eleEta_1 = 0;
      elePhi_1 = 0;
      eleSCEn_1 = 0;
      eleESEn_1 = 0;
      eleSCEta_1 = 0;
      eleSCPhi_1 = 0;
      eleSCRawEn_1 = 0;
      eleSCEtaWidth_1 = 0;
      eleSCPhiWidth_1 = 0;
      eleHoverE_1 = 0;
      eleEoverP_1 = 0;
      eleEoverPInv_1 = 0;
      eleBrem_1 = 0;
      eledEtaAtVtx_1 = 0;
      eledPhiAtVtx_1 = 0;
      eleSigmaIEtaIEta_1 = 0;
      eleSigmaIEtaIEta_2012_1 = 0;
      eleSigmaIPhiIPhi_1 = 0;
      eleMissHits_1 = 0;
      eleESEffSigmaRR_1 = 0;
      elePFChIso_1 = 0;
      elePFPhoIso_1 = 0;
      elePFNeuIso_1 = 0;
      elePFPUIso_1 = 0;
      eleBC1E_1 = 0;
      eleBC1Eta_1 = 0;
      eleBC2E_1 = 0;
      eleBC2Eta_1 = 0;

      eleCharge_2 = 0;
      eleChargeConsistent_2 = 0;
      eleEn_2 = 0;
      eleD0_2 = 0;
      eleDz_2 = 0;
      eleD0Err_2 = 0;
      eleDzErr_2 = 0;
      eleTrkPt_2 = 0;
      eleTrkEta_2 = 0;
      eleTrkPhi_2 = 0;
      eleTrkCharge_2 = 0;
      eleTrkChi2_2 = 0;
      eleTrkNdof_2 = 0;
      eleTrkNormalizedChi2_2 = 0;
      elePt_2 = 0;
      eleEta_2 = 0;
      elePhi_2 = 0;
      eleSCEn_2 = 0;
      eleESEn_2 = 0;
      eleSCEta_2 = 0;
      eleSCPhi_2 = 0;
      eleSCRawEn_2 = 0;
      eleSCEtaWidth_2 = 0;
      eleSCPhiWidth_2 = 0;
      eleHoverE_2 = 0;
      eleEoverP_2 = 0;
      eleEoverPInv_2 = 0;
      eleBrem_2 = 0;
      eledEtaAtVtx_2 = 0;
      eledPhiAtVtx_2 = 0;
      eleSigmaIEtaIEta_2 = 0;
      eleSigmaIEtaIEta_2012_2 = 0;
      eleSigmaIPhiIPhi_2 = 0;
      eleMissHits_2 = 0;
      eleESEffSigmaRR_2 = 0;
      elePFChIso_2 = 0;
      elePFPhoIso_2 = 0;
      elePFNeuIso_2 = 0;
      elePFPUIso_2 = 0;
      eleBC1E_2 = 0;
      eleBC1Eta_2 = 0;
      eleBC2E_2 = 0;
      eleBC2Eta_2 = 0;

      diEleM = 0;
      diEleEn = 0;
      diElePt = 0;
      diEleEta = 0;
      diElePhi = 0;
  };
  ~dielectron(){};

  double mass;
  // Declaration of leaf types
  Int_t           nEle;
  std::vector<int>     *eleCharge_1;
  std::vector<int>     *eleChargeConsistent_1;
  std::vector<float>   *eleEn_1;
  std::vector<float>   *eleD0_1;
  std::vector<float>   *eleDz_1;
  std::vector<float>   *eleD0Err_1;
  std::vector<float>   *eleDzErr_1;
  std::vector<float>   *eleTrkPt_1;
  std::vector<float>   *eleTrkEta_1;
  std::vector<float>   *eleTrkPhi_1;
  std::vector<int>     *eleTrkCharge_1;
  std::vector<float>   *eleTrkChi2_1;
  std::vector<float>   *eleTrkNdof_1;
  std::vector<float>   *eleTrkNormalizedChi2_1;
  std::vector<float>   *elePt_1;
  std::vector<float>   *eleEta_1;
  std::vector<float>   *elePhi_1;
  std::vector<float>   *eleSCEn_1;
  std::vector<float>   *eleESEn_1;
  std::vector<float>   *eleSCEta_1;
  std::vector<float>   *eleSCPhi_1;
  std::vector<float>   *eleSCRawEn_1;
  std::vector<float>   *eleSCEtaWidth_1;
  std::vector<float>   *eleSCPhiWidth_1;
  std::vector<float>   *eleHoverE_1;
  std::vector<float>   *eleEoverP_1;
  std::vector<float>   *eleEoverPInv_1;
  std::vector<float>   *eleBrem_1;
  std::vector<float>   *eledEtaAtVtx_1;
  std::vector<float>   *eledPhiAtVtx_1;
  std::vector<float>   *eleSigmaIEtaIEta_1;
  std::vector<float>   *eleSigmaIEtaIEta_2012_1;
  std::vector<float>   *eleSigmaIPhiIPhi_1;
  std::vector<int>     *eleMissHits_1;
  std::vector<float>   *eleESEffSigmaRR_1;
  std::vector<float>   *elePFChIso_1;
  std::vector<float>   *elePFPhoIso_1;
  std::vector<float>   *elePFNeuIso_1;
  std::vector<float>   *elePFPUIso_1;
  std::vector<float>   *eleBC1E_1;
  std::vector<float>   *eleBC1Eta_1;
  std::vector<float>   *eleBC2E_1;
  std::vector<float>   *eleBC2Eta_1;

  std::vector<int>     *eleCharge_2;
  std::vector<int>     *eleChargeConsistent_2;
  std::vector<float>   *eleEn_2;
  std::vector<float>   *eleD0_2;
  std::vector<float>   *eleDz_2;
  std::vector<float>   *eleD0Err_2;
  std::vector<float>   *eleDzErr_2;
  std::vector<float>   *eleTrkPt_2;
  std::vector<float>   *eleTrkEta_2;
  std::vector<float>   *eleTrkPhi_2;
  std::vector<int>     *eleTrkCharge_2;
  std::vector<float>   *eleTrkChi2_2;
  std::vector<float>   *eleTrkNdof_2;
  std::vector<float>   *eleTrkNormalizedChi2_2;
  std::vector<float>   *elePt_2;
  std::vector<float>   *eleEta_2;
  std::vector<float>   *elePhi_2;
  std::vector<float>   *eleSCEn_2;
  std::vector<float>   *eleESEn_2;
  std::vector<float>   *eleSCEta_2;
  std::vector<float>   *eleSCPhi_2;
  std::vector<float>   *eleSCRawEn_2;
  std::vector<float>   *eleSCEtaWidth_2;
  std::vector<float>   *eleSCPhiWidth_2;
  std::vector<float>   *eleHoverE_2;
  std::vector<float>   *eleEoverP_2;
  std::vector<float>   *eleEoverPInv_2;
  std::vector<float>   *eleBrem_2;
  std::vector<float>   *eledEtaAtVtx_2;
  std::vector<float>   *eledPhiAtVtx_2;
  std::vector<float>   *eleSigmaIEtaIEta_2;
  std::vector<float>   *eleSigmaIEtaIEta_2012_2;
  std::vector<float>   *eleSigmaIPhiIPhi_2;
  std::vector<int>     *eleMissHits_2;
  std::vector<float>   *eleESEffSigmaRR_2;
  std::vector<float>   *elePFChIso_2;
  std::vector<float>   *elePFPhoIso_2;
  std::vector<float>   *elePFNeuIso_2;
  std::vector<float>   *elePFPUIso_2;
  std::vector<float>   *eleBC1E_2;
  std::vector<float>   *eleBC1Eta_2;
  std::vector<float>   *eleBC2E_2;
  std::vector<float>   *eleBC2Eta_2;

  std::vector<float>   *diEleM;
  std::vector<float>   *diEleEn;
  std::vector<float>   *diElePt;
  std::vector<float>   *diEleEta;
  std::vector<float>   *diElePhi;

  // List of branches
  TBranch        *b_nEle;
  TBranch        *b_eleCharge_1;
  TBranch        *b_eleChargeConsistent_1;
  TBranch        *b_eleEn_1;
  TBranch        *b_eleD0_1;
  TBranch        *b_eleDz_1;
  TBranch        *b_eleD0Err_1;
  TBranch        *b_eleDzErr_1;
  TBranch        *b_eleTrkPt_1;
  TBranch        *b_eleTrkEta_1;
  TBranch        *b_eleTrkPhi_1;
  TBranch        *b_eleTrkCharge_1;
  TBranch        *b_eleTrkChi2_1;
  TBranch        *b_eleTrkNdof_1;
  TBranch        *b_eleTrkNormalizedChi2_1;
  TBranch        *b_elePt_1;
  TBranch        *b_eleEta_1;
  TBranch        *b_elePhi_1;
  TBranch        *b_eleSCEn_1;
  TBranch        *b_eleESEn_1;
  TBranch        *b_eleSCEta_1;
  TBranch        *b_eleSCPhi_1;
  TBranch        *b_eleSCRawEn_1;
  TBranch        *b_eleSCEtaWidth_1;
  TBranch        *b_eleSCPhiWidth_1;
  TBranch        *b_eleHoverE_1;
  TBranch        *b_eleEoverP_1;
  TBranch        *b_eleEoverPInv_1;
  TBranch        *b_eleBrem_1;
  TBranch        *b_eledEtaAtVtx_1;
  TBranch        *b_eledPhiAtVtx_1;
  TBranch        *b_eleSigmaIEtaIEta_1;
  TBranch        *b_eleSigmaIEtaIEta_2012_1;
  TBranch        *b_eleSigmaIPhiIPhi_1;
  TBranch        *b_eleMissHits_1;
  TBranch        *b_eleESEffSigmaRR_1;
  TBranch        *b_elePFChIso_1;
  TBranch        *b_elePFPhoIso_1;
  TBranch        *b_elePFNeuIso_1;
  TBranch        *b_elePFPUIso_1;
  TBranch        *b_eleBC1E_1;
  TBranch        *b_eleBC1Eta_1;
  TBranch        *b_eleBC2E_1;
  TBranch        *b_eleBC2Eta_1;

  TBranch        *b_eleCharge_2;
  TBranch        *b_eleChargeConsistent_2;
  TBranch        *b_eleEn_2;
  TBranch        *b_eleD0_2;
  TBranch        *b_eleDz_2;
  TBranch        *b_eleD0Err_2;
  TBranch        *b_eleDzErr_2;
  TBranch        *b_eleTrkPt_2;
  TBranch        *b_eleTrkEta_2;
  TBranch        *b_eleTrkPhi_2;
  TBranch        *b_eleTrkCharge_2;
  TBranch        *b_eleTrkChi2_2;
  TBranch        *b_eleTrkNdof_2;
  TBranch        *b_eleTrkNormalizedChi2_2;
  TBranch        *b_elePt_2;
  TBranch        *b_eleEta_2;
  TBranch        *b_elePhi_2;
  TBranch        *b_eleSCEn_2;
  TBranch        *b_eleESEn_2;
  TBranch        *b_eleSCEta_2;
  TBranch        *b_eleSCPhi_2;
  TBranch        *b_eleSCRawEn_2;
  TBranch        *b_eleSCEtaWidth_2;
  TBranch        *b_eleSCPhiWidth_2;
  TBranch        *b_eleHoverE_2;
  TBranch        *b_eleEoverP_2;
  TBranch        *b_eleEoverPInv_2;
  TBranch        *b_eleBrem_2;
  TBranch        *b_eledEtaAtVtx_2;
  TBranch        *b_eledPhiAtVtx_2;
  TBranch        *b_eleSigmaIEtaIEta_2;
  TBranch        *b_eleSigmaIEtaIEta_2012_2;
  TBranch        *b_eleSigmaIPhiIPhi_2;
  TBranch        *b_eleMissHits_2;
  TBranch        *b_eleESEffSigmaRR_2;
  TBranch        *b_elePFChIso_2;
  TBranch        *b_elePFPhoIso_2;
  TBranch        *b_elePFNeuIso_2;
  TBranch        *b_elePFPUIso_2;
  TBranch        *b_eleBC1E_2;
  TBranch        *b_eleBC1Eta_2;
  TBranch        *b_eleBC2E_2;
  TBranch        *b_eleBC2Eta_2;

  TBranch        *b_diEleM;
  TBranch        *b_diEleEn;
  TBranch        *b_diElePt;
  TBranch        *b_diEleEta;
  TBranch        *b_diElePhi;

  // list of objects to be used when creating a diElectron Tree
  Int_t           nEle_out;
  std::vector<int>     eleCharge_1_out;
  std::vector<int>     eleChargeConsistent_1_out;
  std::vector<float>   eleEn_1_out;
  std::vector<float>   eleD0_1_out;
  std::vector<float>   eleDz_1_out;
  std::vector<float>   eleD0Err_1_out;
  std::vector<float>   eleDzErr_1_out;
  std::vector<float>   eleTrkPt_1_out;
  std::vector<float>   eleTrkEta_1_out;
  std::vector<float>   eleTrkPhi_1_out;
  std::vector<int>     eleTrkCharge_1_out;
  std::vector<float>   eleTrkChi2_1_out;
  std::vector<float>   eleTrkNdof_1_out;
  std::vector<float>   eleTrkNormalizedChi2_1_out;
  std::vector<float>   elePt_1_out;
  std::vector<float>   eleEta_1_out;
  std::vector<float>   elePhi_1_out;
  std::vector<float>   eleSCEn_1_out;
  std::vector<float>   eleESEn_1_out;
  std::vector<float>   eleSCEta_1_out;
  std::vector<float>   eleSCPhi_1_out;
  std::vector<float>   eleSCRawEn_1_out;
  std::vector<float>   eleSCEtaWidth_1_out;
  std::vector<float>   eleSCPhiWidth_1_out;
  std::vector<float>   eleHoverE_1_out;
  std::vector<float>   eleEoverP_1_out;
  std::vector<float>   eleEoverPInv_1_out;
  std::vector<float>   eleBrem_1_out;
  std::vector<float>   eledEtaAtVtx_1_out;
  std::vector<float>   eledPhiAtVtx_1_out;
  std::vector<float>   eleSigmaIEtaIEta_1_out;
  std::vector<float>   eleSigmaIEtaIEta_2012_1_out;
  std::vector<float>   eleSigmaIPhiIPhi_1_out;
  std::vector<int>     eleMissHits_1_out;
  std::vector<float>   eleESEffSigmaRR_1_out;
  std::vector<float>   elePFChIso_1_out;
  std::vector<float>   elePFPhoIso_1_out;
  std::vector<float>   elePFNeuIso_1_out;
  std::vector<float>   elePFPUIso_1_out;
  std::vector<float>   eleBC1E_1_out;
  std::vector<float>   eleBC1Eta_1_out;
  std::vector<float>   eleBC2E_1_out;
  std::vector<float>   eleBC2Eta_1_out;

  std::vector<int>     eleCharge_2_out;
  std::vector<int>     eleChargeConsistent_2_out;
  std::vector<float>   eleEn_2_out;
  std::vector<float>   eleD0_2_out;
  std::vector<float>   eleDz_2_out;
  std::vector<float>   eleD0Err_2_out;
  std::vector<float>   eleDzErr_2_out;
  std::vector<float>   eleTrkPt_2_out;
  std::vector<float>   eleTrkEta_2_out;
  std::vector<float>   eleTrkPhi_2_out;
  std::vector<int>     eleTrkCharge_2_out;
  std::vector<float>   eleTrkChi2_2_out;
  std::vector<float>   eleTrkNdof_2_out;
  std::vector<float>   eleTrkNormalizedChi2_2_out;
  std::vector<float>   elePt_2_out;
  std::vector<float>   eleEta_2_out;
  std::vector<float>   elePhi_2_out;
  std::vector<float>   eleSCEn_2_out;
  std::vector<float>   eleESEn_2_out;
  std::vector<float>   eleSCEta_2_out;
  std::vector<float>   eleSCPhi_2_out;
  std::vector<float>   eleSCRawEn_2_out;
  std::vector<float>   eleSCEtaWidth_2_out;
  std::vector<float>   eleSCPhiWidth_2_out;
  std::vector<float>   eleHoverE_2_out;
  std::vector<float>   eleEoverP_2_out;
  std::vector<float>   eleEoverPInv_2_out;
  std::vector<float>   eleBrem_2_out;
  std::vector<float>   eledEtaAtVtx_2_out;
  std::vector<float>   eledPhiAtVtx_2_out;
  std::vector<float>   eleSigmaIEtaIEta_2_out;
  std::vector<float>   eleSigmaIEtaIEta_2012_2_out;
  std::vector<float>   eleSigmaIPhiIPhi_2_out;
  std::vector<int>     eleMissHits_2_out;
  std::vector<float>   eleESEffSigmaRR_2_out;
  std::vector<float>   elePFChIso_2_out;
  std::vector<float>   elePFPhoIso_2_out;
  std::vector<float>   elePFNeuIso_2_out;
  std::vector<float>   elePFPUIso_2_out;
  std::vector<float>   eleBC1E_2_out;
  std::vector<float>   eleBC1Eta_2_out;
  std::vector<float>   eleBC2E_2_out;
  std::vector<float>   eleBC2Eta_2_out;

  std::vector<float>   diEleM_out;
  std::vector<float>   diEleEn_out;
  std::vector<float>   diElePt_out;
  std::vector<float>   diEleEta_out;
  std::vector<float>   diElePhi_out;
};

void setupDiElectronTree(TTree *t,dielectron &tdielectron);
void branchDiElectronTree(TTree *t,dielectron &tdielectron);
void makeDiElectronPairs(ggHiNtuplizer &tggHiNtuplizer, dielectron &tdielectron, bool doSizeCheck = true);

void setupDiElectronTree(TTree *t,dielectron &tdielectron)
{
    // Set branch addresses and branch pointers
    if (t->GetBranch("nEle"))  t->SetBranchAddress("nEle", &tdielectron.nEle, &tdielectron.b_nEle);

    if (t->GetBranch("eleCharge_1"))  t->SetBranchAddress("eleCharge_1", &tdielectron.eleCharge_1, &tdielectron.b_eleCharge_1);
    if (t->GetBranch("eleChargeConsistent_1"))  t->SetBranchAddress("eleChargeConsistent_1", &tdielectron.eleChargeConsistent_1, &tdielectron.b_eleChargeConsistent_1);
    if (t->GetBranch("eleEn_1"))  t->SetBranchAddress("eleEn_1", &tdielectron.eleEn_1, &tdielectron.b_eleEn_1);
    if (t->GetBranch("eleD0_1"))  t->SetBranchAddress("eleD0_1", &tdielectron.eleD0_1, &tdielectron.b_eleD0_1);
    if (t->GetBranch("eleDz_1"))  t->SetBranchAddress("eleDz_1", &tdielectron.eleDz_1, &tdielectron.b_eleDz_1);
    if (t->GetBranch("eleD0Err_1"))  t->SetBranchAddress("eleD0Err_1", &tdielectron.eleD0Err_1, &tdielectron.b_eleD0Err_1);
    if (t->GetBranch("eleDzErr_1"))  t->SetBranchAddress("eleDzErr_1", &tdielectron.eleDzErr_1, &tdielectron.b_eleDzErr_1);
    if (t->GetBranch("eleTrkPt_1"))  t->SetBranchAddress("eleTrkPt_1", &tdielectron.eleTrkPt_1, &tdielectron.b_eleTrkPt_1);
    if (t->GetBranch("eleTrkEta_1"))  t->SetBranchAddress("eleTrkEta_1", &tdielectron.eleTrkEta_1, &tdielectron.b_eleTrkEta_1);
    if (t->GetBranch("eleTrkPhi_1"))  t->SetBranchAddress("eleTrkPhi_1", &tdielectron.eleTrkPhi_1, &tdielectron.b_eleTrkPhi_1);
    if (t->GetBranch("eleTrkCharge_1"))  t->SetBranchAddress("eleTrkCharge_1", &tdielectron.eleTrkCharge_1, &tdielectron.b_eleTrkCharge_1);
    if (t->GetBranch("eleTrkChi2_1"))  t->SetBranchAddress("eleTrkChi2_1", &tdielectron.eleTrkChi2_1, &tdielectron.b_eleTrkChi2_1);
    if (t->GetBranch("eleTrkNdof_1"))  t->SetBranchAddress("eleTrkNdof_1", &tdielectron.eleTrkNdof_1, &tdielectron.b_eleTrkNdof_1);
    if (t->GetBranch("eleTrkNormalizedChi2_1"))  t->SetBranchAddress("eleTrkNormalizedChi2_1", &tdielectron.eleTrkNormalizedChi2_1, &tdielectron.b_eleTrkNormalizedChi2_1);
    if (t->GetBranch("elePt_1"))  t->SetBranchAddress("elePt_1", &tdielectron.elePt_1, &tdielectron.b_elePt_1);
    if (t->GetBranch("eleEta_1"))  t->SetBranchAddress("eleEta_1", &tdielectron.eleEta_1, &tdielectron.b_eleEta_1);
    if (t->GetBranch("elePhi_1"))  t->SetBranchAddress("elePhi_1", &tdielectron.elePhi_1, &tdielectron.b_elePhi_1);
    if (t->GetBranch("eleSCEn_1"))  t->SetBranchAddress("eleSCEn_1", &tdielectron.eleSCEn_1, &tdielectron.b_eleSCEn_1);
    if (t->GetBranch("eleESEn_1"))  t->SetBranchAddress("eleESEn_1", &tdielectron.eleESEn_1, &tdielectron.b_eleESEn_1);
    if (t->GetBranch("eleSCEta_1"))  t->SetBranchAddress("eleSCEta_1", &tdielectron.eleSCEta_1, &tdielectron.b_eleSCEta_1);
    if (t->GetBranch("eleSCPhi_1"))  t->SetBranchAddress("eleSCPhi_1", &tdielectron.eleSCPhi_1, &tdielectron.b_eleSCPhi_1);
    if (t->GetBranch("eleSCRawEn_1"))  t->SetBranchAddress("eleSCRawEn_1", &tdielectron.eleSCRawEn_1, &tdielectron.b_eleSCRawEn_1);
    if (t->GetBranch("eleSCEtaWidth_1"))  t->SetBranchAddress("eleSCEtaWidth_1", &tdielectron.eleSCEtaWidth_1, &tdielectron.b_eleSCEtaWidth_1);
    if (t->GetBranch("eleSCPhiWidth_1"))  t->SetBranchAddress("eleSCPhiWidth_1", &tdielectron.eleSCPhiWidth_1, &tdielectron.b_eleSCPhiWidth_1);
    if (t->GetBranch("eleHoverE_1"))  t->SetBranchAddress("eleHoverE_1", &tdielectron.eleHoverE_1, &tdielectron.b_eleHoverE_1);
    if (t->GetBranch("eleEoverP_1"))  t->SetBranchAddress("eleEoverP_1", &tdielectron.eleEoverP_1, &tdielectron.b_eleEoverP_1);
    if (t->GetBranch("eleEoverPInv_1"))  t->SetBranchAddress("eleEoverPInv_1", &tdielectron.eleEoverPInv_1, &tdielectron.b_eleEoverPInv_1);
    if (t->GetBranch("eleBrem_1"))  t->SetBranchAddress("eleBrem_1", &tdielectron.eleBrem_1, &tdielectron.b_eleBrem_1);
    if (t->GetBranch("eledEtaAtVtx_1"))  t->SetBranchAddress("eledEtaAtVtx_1", &tdielectron.eledEtaAtVtx_1, &tdielectron.b_eledEtaAtVtx_1);
    if (t->GetBranch("eledPhiAtVtx_1"))  t->SetBranchAddress("eledPhiAtVtx_1", &tdielectron.eledPhiAtVtx_1, &tdielectron.b_eledPhiAtVtx_1);
    if (t->GetBranch("eleSigmaIEtaIEta_1"))  t->SetBranchAddress("eleSigmaIEtaIEta_1", &tdielectron.eleSigmaIEtaIEta_1, &tdielectron.b_eleSigmaIEtaIEta_1);
    if (t->GetBranch("eleSigmaIEtaIEta_1"))  t->SetBranchAddress("eleSigmaIEtaIEta_2012_1", &tdielectron.eleSigmaIEtaIEta_2012_1, &tdielectron.b_eleSigmaIEtaIEta_2012_1);
    if (t->GetBranch("eleSigmaIPhiIPhi_1"))  t->SetBranchAddress("eleSigmaIPhiIPhi_1", &tdielectron.eleSigmaIPhiIPhi_1, &tdielectron.b_eleSigmaIPhiIPhi_1);
    if (t->GetBranch("eleMissHits_1"))  t->SetBranchAddress("eleMissHits_1", &tdielectron.eleMissHits_1, &tdielectron.b_eleMissHits_1);
    if (t->GetBranch("eleESEffSigmaRR_1"))  t->SetBranchAddress("eleESEffSigmaRR_1", &tdielectron.eleESEffSigmaRR_1, &tdielectron.b_eleESEffSigmaRR_1);
    if (t->GetBranch("elePFChIso_1"))  t->SetBranchAddress("elePFChIso_1", &tdielectron.elePFChIso_1, &tdielectron.b_elePFChIso_1);
    if (t->GetBranch("elePFPhoIso_1"))  t->SetBranchAddress("elePFPhoIso_1", &tdielectron.elePFPhoIso_1, &tdielectron.b_elePFPhoIso_1);
    if (t->GetBranch("elePFNeuIso_1"))  t->SetBranchAddress("elePFNeuIso_1", &tdielectron.elePFNeuIso_1, &tdielectron.b_elePFNeuIso_1);
    if (t->GetBranch("elePFPUIso_1"))  t->SetBranchAddress("elePFPUIso_1", &tdielectron.elePFPUIso_1, &tdielectron.b_elePFPUIso_1);
    if (t->GetBranch("eleBC1E_1"))  t->SetBranchAddress("eleBC1E_1", &tdielectron.eleBC1E_1, &tdielectron.b_eleBC1E_1);
    if (t->GetBranch("eleBC1Eta_1"))  t->SetBranchAddress("eleBC1Eta_1", &tdielectron.eleBC1Eta_1, &tdielectron.b_eleBC1Eta_1);
    if (t->GetBranch("eleBC2E_1"))  t->SetBranchAddress("eleBC2E_1", &tdielectron.eleBC2E_1, &tdielectron.b_eleBC2E_1);
    if (t->GetBranch("eleBC2Eta_1"))  t->SetBranchAddress("eleBC2Eta_1", &tdielectron.eleBC2Eta_1, &tdielectron.b_eleBC2Eta_1);

    if (t->GetBranch("eleCharge_2"))  t->SetBranchAddress("eleCharge_1", &tdielectron.eleCharge_1, &tdielectron.b_eleCharge_1);
    if (t->GetBranch("eleChargeConsistent_2"))  t->SetBranchAddress("eleChargeConsistent_1", &tdielectron.eleChargeConsistent_1, &tdielectron.b_eleChargeConsistent_1);
    if (t->GetBranch("eleEn_2"))  t->SetBranchAddress("eleEn_1", &tdielectron.eleEn_1, &tdielectron.b_eleEn_1);
    if (t->GetBranch("eleD0_2"))  t->SetBranchAddress("eleD0_1", &tdielectron.eleD0_1, &tdielectron.b_eleD0_1);
    if (t->GetBranch("eleDz_2"))  t->SetBranchAddress("eleDz_1", &tdielectron.eleDz_1, &tdielectron.b_eleDz_1);
    if (t->GetBranch("eleD0Err_2"))  t->SetBranchAddress("eleD0Err_1", &tdielectron.eleD0Err_1, &tdielectron.b_eleD0Err_1);
    if (t->GetBranch("eleDzErr_2"))  t->SetBranchAddress("eleDzErr_1", &tdielectron.eleDzErr_1, &tdielectron.b_eleDzErr_1);
    if (t->GetBranch("eleTrkPt_2"))  t->SetBranchAddress("eleTrkPt_1", &tdielectron.eleTrkPt_1, &tdielectron.b_eleTrkPt_1);
    if (t->GetBranch("eleTrkEta_2"))  t->SetBranchAddress("eleTrkEta_1", &tdielectron.eleTrkEta_1, &tdielectron.b_eleTrkEta_1);
    if (t->GetBranch("eleTrkPhi_2"))  t->SetBranchAddress("eleTrkPhi_1", &tdielectron.eleTrkPhi_1, &tdielectron.b_eleTrkPhi_1);
    if (t->GetBranch("eleTrkCharge_2"))  t->SetBranchAddress("eleTrkCharge_1", &tdielectron.eleTrkCharge_1, &tdielectron.b_eleTrkCharge_1);
    if (t->GetBranch("eleTrkChi2_2"))  t->SetBranchAddress("eleTrkChi2_1", &tdielectron.eleTrkChi2_1, &tdielectron.b_eleTrkChi2_1);
    if (t->GetBranch("eleTrkNdof_2"))  t->SetBranchAddress("eleTrkNdof_1", &tdielectron.eleTrkNdof_1, &tdielectron.b_eleTrkNdof_1);
    if (t->GetBranch("eleTrkNormalizedChi2_2"))  t->SetBranchAddress("eleTrkNormalizedChi2_1", &tdielectron.eleTrkNormalizedChi2_1, &tdielectron.b_eleTrkNormalizedChi2_1);
    if (t->GetBranch("elePt_2"))  t->SetBranchAddress("elePt_1", &tdielectron.elePt_1, &tdielectron.b_elePt_1);
    if (t->GetBranch("eleEta_2"))  t->SetBranchAddress("eleEta_1", &tdielectron.eleEta_1, &tdielectron.b_eleEta_1);
    if (t->GetBranch("elePhi_2"))  t->SetBranchAddress("elePhi_1", &tdielectron.elePhi_1, &tdielectron.b_elePhi_1);
    if (t->GetBranch("eleSCEn_2"))  t->SetBranchAddress("eleSCEn_1", &tdielectron.eleSCEn_1, &tdielectron.b_eleSCEn_1);
    if (t->GetBranch("eleESEn_2"))  t->SetBranchAddress("eleESEn_1", &tdielectron.eleESEn_1, &tdielectron.b_eleESEn_1);
    if (t->GetBranch("eleSCEta_2"))  t->SetBranchAddress("eleSCEta_1", &tdielectron.eleSCEta_1, &tdielectron.b_eleSCEta_1);
    if (t->GetBranch("eleSCPhi_2"))  t->SetBranchAddress("eleSCPhi_1", &tdielectron.eleSCPhi_1, &tdielectron.b_eleSCPhi_1);
    if (t->GetBranch("eleSCRawEn_2"))  t->SetBranchAddress("eleSCRawEn_1", &tdielectron.eleSCRawEn_1, &tdielectron.b_eleSCRawEn_1);
    if (t->GetBranch("eleSCEtaWidth_2"))  t->SetBranchAddress("eleSCEtaWidth_1", &tdielectron.eleSCEtaWidth_1, &tdielectron.b_eleSCEtaWidth_1);
    if (t->GetBranch("eleSCPhiWidth_2"))  t->SetBranchAddress("eleSCPhiWidth_1", &tdielectron.eleSCPhiWidth_1, &tdielectron.b_eleSCPhiWidth_1);
    if (t->GetBranch("eleHoverE_2"))  t->SetBranchAddress("eleHoverE_1", &tdielectron.eleHoverE_1, &tdielectron.b_eleHoverE_1);
    if (t->GetBranch("eleEoverP_2"))  t->SetBranchAddress("eleEoverP_1", &tdielectron.eleEoverP_1, &tdielectron.b_eleEoverP_1);
    if (t->GetBranch("eleEoverPInv_2"))  t->SetBranchAddress("eleEoverPInv_1", &tdielectron.eleEoverPInv_1, &tdielectron.b_eleEoverPInv_1);
    if (t->GetBranch("eleBrem_2"))  t->SetBranchAddress("eleBrem_1", &tdielectron.eleBrem_1, &tdielectron.b_eleBrem_1);
    if (t->GetBranch("eledEtaAtVtx_2"))  t->SetBranchAddress("eledEtaAtVtx_1", &tdielectron.eledEtaAtVtx_1, &tdielectron.b_eledEtaAtVtx_1);
    if (t->GetBranch("eledPhiAtVtx_2"))  t->SetBranchAddress("eledPhiAtVtx_1", &tdielectron.eledPhiAtVtx_1, &tdielectron.b_eledPhiAtVtx_1);
    if (t->GetBranch("eleSigmaIEtaIEta_2"))  t->SetBranchAddress("eleSigmaIEtaIEta_1", &tdielectron.eleSigmaIEtaIEta_1, &tdielectron.b_eleSigmaIEtaIEta_1);
    if (t->GetBranch("eleSigmaIEtaIEta_2"))  t->SetBranchAddress("eleSigmaIEtaIEta_2012_1", &tdielectron.eleSigmaIEtaIEta_2012_1, &tdielectron.b_eleSigmaIEtaIEta_2012_1);
    if (t->GetBranch("eleSigmaIPhiIPhi_2"))  t->SetBranchAddress("eleSigmaIPhiIPhi_1", &tdielectron.eleSigmaIPhiIPhi_1, &tdielectron.b_eleSigmaIPhiIPhi_1);
    if (t->GetBranch("eleMissHits_2"))  t->SetBranchAddress("eleMissHits_1", &tdielectron.eleMissHits_1, &tdielectron.b_eleMissHits_1);
    if (t->GetBranch("eleESEffSigmaRR_2"))  t->SetBranchAddress("eleESEffSigmaRR_1", &tdielectron.eleESEffSigmaRR_1, &tdielectron.b_eleESEffSigmaRR_1);
    if (t->GetBranch("elePFChIso_2"))  t->SetBranchAddress("elePFChIso_1", &tdielectron.elePFChIso_1, &tdielectron.b_elePFChIso_1);
    if (t->GetBranch("elePFPhoIso_2"))  t->SetBranchAddress("elePFPhoIso_1", &tdielectron.elePFPhoIso_1, &tdielectron.b_elePFPhoIso_1);
    if (t->GetBranch("elePFNeuIso_2"))  t->SetBranchAddress("elePFNeuIso_1", &tdielectron.elePFNeuIso_1, &tdielectron.b_elePFNeuIso_1);
    if (t->GetBranch("elePFPUIso_2"))  t->SetBranchAddress("elePFPUIso_1", &tdielectron.elePFPUIso_1, &tdielectron.b_elePFPUIso_1);
    if (t->GetBranch("eleBC1E_2"))  t->SetBranchAddress("eleBC1E_1", &tdielectron.eleBC1E_1, &tdielectron.b_eleBC1E_1);
    if (t->GetBranch("eleBC1Eta_2"))  t->SetBranchAddress("eleBC1Eta_1", &tdielectron.eleBC1Eta_1, &tdielectron.b_eleBC1Eta_1);
    if (t->GetBranch("eleBC2E_2"))  t->SetBranchAddress("eleBC2E_1", &tdielectron.eleBC2E_1, &tdielectron.b_eleBC2E_1);
    if (t->GetBranch("eleBC2Eta_2"))  t->SetBranchAddress("eleBC2Eta_1", &tdielectron.eleBC2Eta_1, &tdielectron.b_eleBC2Eta_1);

    if (t->GetBranch("diEleM"))  t->SetBranchAddress("diEleM", &tdielectron.diEleM, &tdielectron.b_diEleM);
    if (t->GetBranch("diEleEn"))  t->SetBranchAddress("diEleEn", &tdielectron.diEleEn, &tdielectron.b_diEleEn);
    if (t->GetBranch("diElePt"))  t->SetBranchAddress("diElePt", &tdielectron.diElePt, &tdielectron.b_diElePt);
    if (t->GetBranch("diEleEta"))  t->SetBranchAddress("diEleEta", &tdielectron.diEleEta, &tdielectron.b_diEleEta);
    if (t->GetBranch("diElePhi"))  t->SetBranchAddress("diElePhi", &tdielectron.diElePhi, &tdielectron.b_diElePhi);
}

void branchDiElectronTree(TTree *t,dielectron &tdielectron)
{
    t->Branch("nEle", &tdielectron.nEle_out);

    t->Branch("eleCharge_1", &tdielectron.eleCharge_1_out);
    t->Branch("eleChargeConsistent_1", &tdielectron.eleChargeConsistent_1_out);
    t->Branch("eleEn_1", &tdielectron.eleEn_1_out);
    t->Branch("eleD0_1", &tdielectron.eleD0_1_out);
    t->Branch("eleDz_1", &tdielectron.eleDz_1_out);
    t->Branch("eleD0Err_1", &tdielectron.eleD0Err_1_out);
    t->Branch("eleDzErr_1", &tdielectron.eleDzErr_1_out);
    t->Branch("eleTrkPt_1", &tdielectron.eleTrkPt_1_out);
    t->Branch("eleTrkEta_1", &tdielectron.eleTrkEta_1_out);
    t->Branch("eleTrkPhi_1", &tdielectron.eleTrkPhi_1_out);
    t->Branch("eleTrkCharge_1", &tdielectron.eleTrkCharge_1_out);
    t->Branch("eleTrkChi2_1", &tdielectron.eleTrkChi2_1_out);
    t->Branch("eleTrkNdof_1", &tdielectron.eleTrkNdof_1_out);
    t->Branch("eleTrkNormalizedChi2_1", &tdielectron.eleTrkNormalizedChi2_1_out);
    t->Branch("elePt_1", &tdielectron.elePt_1_out);
    t->Branch("eleEta_1", &tdielectron.eleEta_1_out);
    t->Branch("elePhi_1", &tdielectron.elePhi_1_out);
    t->Branch("eleSCEn_1", &tdielectron.eleSCEn_1_out);
    t->Branch("eleESEn_1", &tdielectron.eleESEn_1_out);
    t->Branch("eleSCEta_1", &tdielectron.eleSCEta_1_out);
    t->Branch("eleSCPhi_1", &tdielectron.eleSCPhi_1_out);
    t->Branch("eleSCRawEn_1", &tdielectron.eleSCRawEn_1_out);
    t->Branch("eleSCEtaWidth_1", &tdielectron.eleSCEtaWidth_1_out);
    t->Branch("eleSCPhiWidth_1", &tdielectron.eleSCPhiWidth_1_out);
    t->Branch("eleHoverE_1", &tdielectron.eleHoverE_1_out);
    t->Branch("eleEoverP_1", &tdielectron.eleEoverP_1_out);
    t->Branch("eleEoverPInv_1", &tdielectron.eleEoverPInv_1_out);
    t->Branch("eleBrem_1", &tdielectron.eleBrem_1_out);
    t->Branch("eledEtaAtVtx_1", &tdielectron.eledEtaAtVtx_1_out);
    t->Branch("eledPhiAtVtx_1", &tdielectron.eledPhiAtVtx_1_out);
    t->Branch("eleSigmaIEtaIEta_1", &tdielectron.eleSigmaIEtaIEta_1_out);
    t->Branch("eleSigmaIEtaIEta_2012_1", &tdielectron.eleSigmaIEtaIEta_2012_1_out);
    t->Branch("eleSigmaIPhiIPhi_1", &tdielectron.eleSigmaIPhiIPhi_1_out);
    t->Branch("eleMissHits_1", &tdielectron.eleMissHits_1_out);
    t->Branch("eleESEffSigmaRR_1", &tdielectron.eleESEffSigmaRR_1_out);
    t->Branch("elePFChIso_1", &tdielectron.elePFChIso_1_out);
    t->Branch("elePFPhoIso_1", &tdielectron.elePFPhoIso_1_out);
    t->Branch("elePFNeuIso_1", &tdielectron.elePFNeuIso_1_out);
    t->Branch("elePFPUIso_1", &tdielectron.elePFPUIso_1_out);
    t->Branch("eleBC1E_1", &tdielectron.eleBC1E_1_out);
    t->Branch("eleBC1Eta_1", &tdielectron.eleBC1Eta_1_out);
    t->Branch("eleBC2E_1", &tdielectron.eleBC2E_1_out);
    t->Branch("eleBC2Eta_1", &tdielectron.eleBC2Eta_1_out);

    t->Branch("eleCharge_2", &tdielectron.eleCharge_2_out);
    t->Branch("eleChargeConsistent_2", &tdielectron.eleChargeConsistent_2_out);
    t->Branch("eleEn_2", &tdielectron.eleEn_2_out);
    t->Branch("eleD0_2", &tdielectron.eleD0_2_out);
    t->Branch("eleDz_2", &tdielectron.eleDz_2_out);
    t->Branch("eleD0Err_2", &tdielectron.eleD0Err_2_out);
    t->Branch("eleDzErr_2", &tdielectron.eleDzErr_2_out);
    t->Branch("eleTrkPt_2", &tdielectron.eleTrkPt_2_out);
    t->Branch("eleTrkEta_2", &tdielectron.eleTrkEta_2_out);
    t->Branch("eleTrkPhi_2", &tdielectron.eleTrkPhi_2_out);
    t->Branch("eleTrkCharge_2", &tdielectron.eleTrkCharge_2_out);
    t->Branch("eleTrkChi2_2", &tdielectron.eleTrkChi2_2_out);
    t->Branch("eleTrkNdof_2", &tdielectron.eleTrkNdof_2_out);
    t->Branch("eleTrkNormalizedChi2_2", &tdielectron.eleTrkNormalizedChi2_2_out);
    t->Branch("elePt_2", &tdielectron.elePt_2_out);
    t->Branch("eleEta_2", &tdielectron.eleEta_2_out);
    t->Branch("elePhi_2", &tdielectron.elePhi_2_out);
    t->Branch("eleSCEn_2", &tdielectron.eleSCEn_2_out);
    t->Branch("eleESEn_2", &tdielectron.eleESEn_2_out);
    t->Branch("eleSCEta_2", &tdielectron.eleSCEta_2_out);
    t->Branch("eleSCPhi_2", &tdielectron.eleSCPhi_2_out);
    t->Branch("eleSCRawEn_2", &tdielectron.eleSCRawEn_2_out);
    t->Branch("eleSCEtaWidth_2", &tdielectron.eleSCEtaWidth_2_out);
    t->Branch("eleSCPhiWidth_2", &tdielectron.eleSCPhiWidth_2_out);
    t->Branch("eleHoverE_2", &tdielectron.eleHoverE_2_out);
    t->Branch("eleEoverP_2", &tdielectron.eleEoverP_2_out);
    t->Branch("eleEoverPInv_2", &tdielectron.eleEoverPInv_2_out);
    t->Branch("eleBrem_2", &tdielectron.eleBrem_2_out);
    t->Branch("eledEtaAtVtx_2", &tdielectron.eledEtaAtVtx_2_out);
    t->Branch("eledPhiAtVtx_2", &tdielectron.eledPhiAtVtx_2_out);
    t->Branch("eleSigmaIEtaIEta_2", &tdielectron.eleSigmaIEtaIEta_2_out);
    t->Branch("eleSigmaIEtaIEta_2012_2", &tdielectron.eleSigmaIEtaIEta_2012_2_out);
    t->Branch("eleSigmaIPhiIPhi_2", &tdielectron.eleSigmaIPhiIPhi_2_out);
    t->Branch("eleMissHits_2", &tdielectron.eleMissHits_2_out);
    t->Branch("eleESEffSigmaRR_2", &tdielectron.eleESEffSigmaRR_2_out);
    t->Branch("elePFChIso_2", &tdielectron.elePFChIso_2_out);
    t->Branch("elePFPhoIso_2", &tdielectron.elePFPhoIso_2_out);
    t->Branch("elePFNeuIso_2", &tdielectron.elePFNeuIso_2_out);
    t->Branch("elePFPUIso_2", &tdielectron.elePFPUIso_2_out);
    t->Branch("eleBC1E_2", &tdielectron.eleBC1E_2_out);
    t->Branch("eleBC1Eta_2", &tdielectron.eleBC1Eta_2_out);
    t->Branch("eleBC2E_2", &tdielectron.eleBC2E_2_out);
    t->Branch("eleBC2Eta_2", &tdielectron.eleBC2Eta_2_out);

    t->Branch("diEleM", &tdielectron.diEleM_out);
    t->Branch("diEleEn", &tdielectron.diEleEn_out);
    t->Branch("diElePt", &tdielectron.diElePt_out);
    t->Branch("diEleEta", &tdielectron.diEleEta_out);
    t->Branch("diElePhi", &tdielectron.diElePhi_out);
}

void makeDiElectronPairs(ggHiNtuplizer &tggHiNtuplizer, dielectron &tdielectron, bool doSizeCheck)
{
    tdielectron.eleCharge_1_out.clear();
    tdielectron.eleChargeConsistent_1_out.clear();
    tdielectron.eleEn_1_out.clear();
    tdielectron.eleD0_1_out.clear();
    tdielectron.eleDz_1_out.clear();
    tdielectron.eleD0Err_1_out.clear();
    tdielectron.eleDzErr_1_out.clear();
    tdielectron.eleTrkPt_1_out.clear();
    tdielectron.eleTrkEta_1_out.clear();
    tdielectron.eleTrkPhi_1_out.clear();
    tdielectron.eleTrkCharge_1_out.clear();
    tdielectron.eleTrkChi2_1_out.clear();
    tdielectron.eleTrkNdof_1_out.clear();
    tdielectron.eleTrkNormalizedChi2_1_out.clear();
    tdielectron.elePt_1_out.clear();
    tdielectron.eleEta_1_out.clear();
    tdielectron.elePhi_1_out.clear();
    tdielectron.eleSCEn_1_out.clear();
    tdielectron.eleESEn_1_out.clear();
    tdielectron.eleSCEta_1_out.clear();
    tdielectron.eleSCPhi_1_out.clear();
    tdielectron.eleSCRawEn_1_out.clear();
    tdielectron.eleSCEtaWidth_1_out.clear();
    tdielectron.eleSCPhiWidth_1_out.clear();
    tdielectron.eleHoverE_1_out.clear();
    tdielectron.eleEoverP_1_out.clear();
    tdielectron.eleEoverPInv_1_out.clear();
    tdielectron.eleBrem_1_out.clear();
    tdielectron.eledEtaAtVtx_1_out.clear();
    tdielectron.eledPhiAtVtx_1_out.clear();
    tdielectron.eleSigmaIEtaIEta_1_out.clear();
    tdielectron.eleSigmaIEtaIEta_2012_1_out.clear();
    tdielectron.eleSigmaIPhiIPhi_1_out.clear();
    tdielectron.eleMissHits_1_out.clear();
    tdielectron.eleESEffSigmaRR_1_out.clear();
    tdielectron.elePFChIso_1_out.clear();
    tdielectron.elePFPhoIso_1_out.clear();
    tdielectron.elePFNeuIso_1_out.clear();
    tdielectron.elePFPUIso_1_out.clear();
    tdielectron.eleBC1E_1_out.clear();
    tdielectron.eleBC1Eta_1_out.clear();
    tdielectron.eleBC2E_1_out.clear();
    tdielectron.eleBC2Eta_1_out.clear();

    tdielectron.eleCharge_2_out.clear();
    tdielectron.eleChargeConsistent_2_out.clear();
    tdielectron.eleEn_2_out.clear();
    tdielectron.eleD0_2_out.clear();
    tdielectron.eleDz_2_out.clear();
    tdielectron.eleD0Err_2_out.clear();
    tdielectron.eleDzErr_2_out.clear();
    tdielectron.eleTrkPt_2_out.clear();
    tdielectron.eleTrkEta_2_out.clear();
    tdielectron.eleTrkPhi_2_out.clear();
    tdielectron.eleTrkCharge_2_out.clear();
    tdielectron.eleTrkChi2_2_out.clear();
    tdielectron.eleTrkNdof_2_out.clear();
    tdielectron.eleTrkNormalizedChi2_2_out.clear();
    tdielectron.elePt_2_out.clear();
    tdielectron.eleEta_2_out.clear();
    tdielectron.elePhi_2_out.clear();
    tdielectron.eleSCEn_2_out.clear();
    tdielectron.eleESEn_2_out.clear();
    tdielectron.eleSCEta_2_out.clear();
    tdielectron.eleSCPhi_2_out.clear();
    tdielectron.eleSCRawEn_2_out.clear();
    tdielectron.eleSCEtaWidth_2_out.clear();
    tdielectron.eleSCPhiWidth_2_out.clear();
    tdielectron.eleHoverE_2_out.clear();
    tdielectron.eleEoverP_2_out.clear();
    tdielectron.eleEoverPInv_2_out.clear();
    tdielectron.eleBrem_2_out.clear();
    tdielectron.eledEtaAtVtx_2_out.clear();
    tdielectron.eledPhiAtVtx_2_out.clear();
    tdielectron.eleSigmaIEtaIEta_2_out.clear();
    tdielectron.eleSigmaIEtaIEta_2012_2_out.clear();
    tdielectron.eleSigmaIPhiIPhi_2_out.clear();
    tdielectron.eleMissHits_2_out.clear();
    tdielectron.eleESEffSigmaRR_2_out.clear();
    tdielectron.elePFChIso_2_out.clear();
    tdielectron.elePFPhoIso_2_out.clear();
    tdielectron.elePFNeuIso_2_out.clear();
    tdielectron.elePFPUIso_2_out.clear();
    tdielectron.eleBC1E_2_out.clear();
    tdielectron.eleBC1Eta_2_out.clear();
    tdielectron.eleBC2E_2_out.clear();
    tdielectron.eleBC2Eta_2_out.clear();

    tdielectron.diEleM_out.clear();
    tdielectron.diEleEn_out.clear();
    tdielectron.diElePt_out.clear();
    tdielectron.diEleEta_out.clear();
    tdielectron.diElePhi_out.clear();

    tdielectron.nEle_out = tggHiNtuplizer.nEle;
    for(int i=0; i<tdielectron.nEle_out; ++i)
    {
        for(int j=i+1; j<tdielectron.nEle_out; ++j)
        {
            if (doSizeCheck) {

                if(tggHiNtuplizer.eleCharge->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleCharge_1_out.push_back(tggHiNtuplizer.eleCharge->at(i));
                if(tggHiNtuplizer.eleChargeConsistent->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleChargeConsistent_1_out.push_back(tggHiNtuplizer.eleChargeConsistent->at(i));
                if(tggHiNtuplizer.eleEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEn_1_out.push_back(tggHiNtuplizer.eleEn->at(i));
                if(tggHiNtuplizer.eleD0->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleD0_1_out.push_back(tggHiNtuplizer.eleD0->at(i));
                if(tggHiNtuplizer.eleDz->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleDz_1_out.push_back(tggHiNtuplizer.eleDz->at(i));
                if(tggHiNtuplizer.eleD0Err->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleD0Err_1_out.push_back(tggHiNtuplizer.eleD0Err->at(i));
                if(tggHiNtuplizer.eleDzErr->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleDzErr_1_out.push_back(tggHiNtuplizer.eleDzErr->at(i));
                if(tggHiNtuplizer.eleTrkPt->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkPt_1_out.push_back(tggHiNtuplizer.eleTrkPt->at(i));
                if(tggHiNtuplizer.eleTrkEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkEta_1_out.push_back(tggHiNtuplizer.eleTrkEta->at(i));
                if(tggHiNtuplizer.eleTrkPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkPhi_1_out.push_back(tggHiNtuplizer.eleTrkPhi->at(i));
                if(tggHiNtuplizer.eleTrkCharge->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkCharge_1_out.push_back(tggHiNtuplizer.eleTrkCharge->at(i));
                if(tggHiNtuplizer.eleTrkChi2->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkChi2_1_out.push_back(tggHiNtuplizer.eleTrkChi2->at(i));
                if(tggHiNtuplizer.eleTrkNdof->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkNdof_1_out.push_back(tggHiNtuplizer.eleTrkNdof->at(i));
                if(tggHiNtuplizer.eleTrkNormalizedChi2->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkNormalizedChi2_1_out.push_back(tggHiNtuplizer.eleTrkNormalizedChi2->at(i));
                if(tggHiNtuplizer.elePt->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePt_1_out.push_back(tggHiNtuplizer.elePt->at(i));
                if(tggHiNtuplizer.eleEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEta_1_out.push_back(tggHiNtuplizer.eleEta->at(i));
                if(tggHiNtuplizer.elePhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePhi_1_out.push_back(tggHiNtuplizer.elePhi->at(i));
                if(tggHiNtuplizer.eleSCEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEn_1_out.push_back(tggHiNtuplizer.eleSCEn->at(i));
                if(tggHiNtuplizer.eleESEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleESEn_1_out.push_back(tggHiNtuplizer.eleESEn->at(i));
                if(tggHiNtuplizer.eleSCEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEta_1_out.push_back(tggHiNtuplizer.eleSCEta->at(i));
                if(tggHiNtuplizer.eleSCPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCPhi_1_out.push_back(tggHiNtuplizer.eleSCPhi->at(i));
                if(tggHiNtuplizer.eleSCRawEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCRawEn_1_out.push_back(tggHiNtuplizer.eleSCRawEn->at(i));
                if(tggHiNtuplizer.eleSCEtaWidth->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEtaWidth_1_out.push_back(tggHiNtuplizer.eleSCEtaWidth->at(i));
                if(tggHiNtuplizer.eleSCPhiWidth->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCPhiWidth_1_out.push_back(tggHiNtuplizer.eleSCPhiWidth->at(i));
                if(tggHiNtuplizer.eleHoverE->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleHoverE_1_out.push_back(tggHiNtuplizer.eleHoverE->at(i));
                if(tggHiNtuplizer.eleEoverP->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEoverP_1_out.push_back(tggHiNtuplizer.eleEoverP->at(i));
                if(tggHiNtuplizer.eleEoverPInv->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEoverPInv_1_out.push_back(tggHiNtuplizer.eleEoverPInv->at(i));
                if(tggHiNtuplizer.eleBrem->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBrem_1_out.push_back(tggHiNtuplizer.eleBrem->at(i));
                if(tggHiNtuplizer.eledEtaAtVtx->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eledEtaAtVtx_1_out.push_back(tggHiNtuplizer.eledEtaAtVtx->at(i));
                if(tggHiNtuplizer.eledPhiAtVtx->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eledPhiAtVtx_1_out.push_back(tggHiNtuplizer.eledPhiAtVtx->at(i));
                if(tggHiNtuplizer.eleSigmaIEtaIEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIEtaIEta_1_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta->at(i));
                if(tggHiNtuplizer.eleSigmaIEtaIEta_2012->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIEtaIEta_2012_1_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta_2012->at(i));
                if(tggHiNtuplizer.eleSigmaIPhiIPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIPhiIPhi_1_out.push_back(tggHiNtuplizer.eleSigmaIPhiIPhi->at(i));
                if(tggHiNtuplizer.eleMissHits->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleMissHits_1_out.push_back(tggHiNtuplizer.eleMissHits->at(i));
                if(tggHiNtuplizer.eleESEffSigmaRR->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleESEffSigmaRR_1_out.push_back(tggHiNtuplizer.eleESEffSigmaRR->at(i));
                if(tggHiNtuplizer.elePFChIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFChIso_1_out.push_back(tggHiNtuplizer.elePFChIso->at(i));
                if(tggHiNtuplizer.elePFPhoIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFPhoIso_1_out.push_back(tggHiNtuplizer.elePFPhoIso->at(i));
                if(tggHiNtuplizer.elePFNeuIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFNeuIso_1_out.push_back(tggHiNtuplizer.elePFNeuIso->at(i));
                if(tggHiNtuplizer.elePFPUIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFPUIso_1_out.push_back(tggHiNtuplizer.elePFPUIso->at(i));
                if(tggHiNtuplizer.eleBC1E->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC1E_1_out.push_back(tggHiNtuplizer.eleBC1E->at(i));
                if(tggHiNtuplizer.eleBC1Eta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC1Eta_1_out.push_back(tggHiNtuplizer.eleBC1Eta->at(i));
                if(tggHiNtuplizer.eleBC2E->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC2E_1_out.push_back(tggHiNtuplizer.eleBC2E->at(i));
                if(tggHiNtuplizer.eleBC2Eta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC2Eta_1_out.push_back(tggHiNtuplizer.eleBC2Eta->at(i));

                if(tggHiNtuplizer.eleCharge->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleCharge_2_out.push_back(tggHiNtuplizer.eleCharge->at(j));
                if(tggHiNtuplizer.eleChargeConsistent->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleChargeConsistent_2_out.push_back(tggHiNtuplizer.eleChargeConsistent->at(j));
                if(tggHiNtuplizer.eleEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEn_2_out.push_back(tggHiNtuplizer.eleEn->at(j));
                if(tggHiNtuplizer.eleD0->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleD0_2_out.push_back(tggHiNtuplizer.eleD0->at(j));
                if(tggHiNtuplizer.eleDz->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleDz_2_out.push_back(tggHiNtuplizer.eleDz->at(j));
                if(tggHiNtuplizer.eleD0Err->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleD0Err_2_out.push_back(tggHiNtuplizer.eleD0Err->at(j));
                if(tggHiNtuplizer.eleDzErr->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleDzErr_2_out.push_back(tggHiNtuplizer.eleDzErr->at(j));
                if(tggHiNtuplizer.eleTrkPt->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkPt_2_out.push_back(tggHiNtuplizer.eleTrkPt->at(j));
                if(tggHiNtuplizer.eleTrkEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkEta_2_out.push_back(tggHiNtuplizer.eleTrkEta->at(j));
                if(tggHiNtuplizer.eleTrkPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkPhi_2_out.push_back(tggHiNtuplizer.eleTrkPhi->at(j));
                if(tggHiNtuplizer.eleTrkCharge->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkCharge_2_out.push_back(tggHiNtuplizer.eleTrkCharge->at(j));
                if(tggHiNtuplizer.eleTrkChi2->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkChi2_2_out.push_back(tggHiNtuplizer.eleTrkChi2->at(j));
                if(tggHiNtuplizer.eleTrkNdof->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkNdof_2_out.push_back(tggHiNtuplizer.eleTrkNdof->at(j));
                if(tggHiNtuplizer.eleTrkNormalizedChi2->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleTrkNormalizedChi2_2_out.push_back(tggHiNtuplizer.eleTrkNormalizedChi2->at(j));
                if(tggHiNtuplizer.elePt->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePt_2_out.push_back(tggHiNtuplizer.elePt->at(j));
                if(tggHiNtuplizer.eleEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEta_2_out.push_back(tggHiNtuplizer.eleEta->at(j));
                if(tggHiNtuplizer.elePhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePhi_2_out.push_back(tggHiNtuplizer.elePhi->at(j));
                if(tggHiNtuplizer.eleSCEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEn_2_out.push_back(tggHiNtuplizer.eleSCEn->at(j));
                if(tggHiNtuplizer.eleESEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleESEn_2_out.push_back(tggHiNtuplizer.eleESEn->at(j));
                if(tggHiNtuplizer.eleSCEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEta_2_out.push_back(tggHiNtuplizer.eleSCEta->at(j));
                if(tggHiNtuplizer.eleSCPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCPhi_2_out.push_back(tggHiNtuplizer.eleSCPhi->at(j));
                if(tggHiNtuplizer.eleSCRawEn->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCRawEn_2_out.push_back(tggHiNtuplizer.eleSCRawEn->at(j));
                if(tggHiNtuplizer.eleSCEtaWidth->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCEtaWidth_2_out.push_back(tggHiNtuplizer.eleSCEtaWidth->at(j));
                if(tggHiNtuplizer.eleSCPhiWidth->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSCPhiWidth_2_out.push_back(tggHiNtuplizer.eleSCPhiWidth->at(j));
                if(tggHiNtuplizer.eleHoverE->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleHoverE_2_out.push_back(tggHiNtuplizer.eleHoverE->at(j));
                if(tggHiNtuplizer.eleEoverP->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEoverP_2_out.push_back(tggHiNtuplizer.eleEoverP->at(j));
                if(tggHiNtuplizer.eleEoverPInv->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleEoverPInv_2_out.push_back(tggHiNtuplizer.eleEoverPInv->at(j));
                if(tggHiNtuplizer.eleBrem->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBrem_2_out.push_back(tggHiNtuplizer.eleBrem->at(j));
                if(tggHiNtuplizer.eledEtaAtVtx->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eledEtaAtVtx_2_out.push_back(tggHiNtuplizer.eledEtaAtVtx->at(j));
                if(tggHiNtuplizer.eledPhiAtVtx->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eledPhiAtVtx_2_out.push_back(tggHiNtuplizer.eledPhiAtVtx->at(j));
                if(tggHiNtuplizer.eleSigmaIEtaIEta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIEtaIEta_2_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta->at(j));
                if(tggHiNtuplizer.eleSigmaIEtaIEta_2012->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIEtaIEta_2012_2_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta_2012->at(j));
                if(tggHiNtuplizer.eleSigmaIPhiIPhi->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleSigmaIPhiIPhi_2_out.push_back(tggHiNtuplizer.eleSigmaIPhiIPhi->at(j));
                if(tggHiNtuplizer.eleMissHits->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleMissHits_2_out.push_back(tggHiNtuplizer.eleMissHits->at(j));
                if(tggHiNtuplizer.eleESEffSigmaRR->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleESEffSigmaRR_2_out.push_back(tggHiNtuplizer.eleESEffSigmaRR->at(j));
                if(tggHiNtuplizer.elePFChIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFChIso_2_out.push_back(tggHiNtuplizer.elePFChIso->at(j));
                if(tggHiNtuplizer.elePFPhoIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFPhoIso_2_out.push_back(tggHiNtuplizer.elePFPhoIso->at(j));
                if(tggHiNtuplizer.elePFNeuIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFNeuIso_2_out.push_back(tggHiNtuplizer.elePFNeuIso->at(j));
                if(tggHiNtuplizer.elePFPUIso->size() == (unsigned)tdielectron.nEle_out)  tdielectron.elePFPUIso_2_out.push_back(tggHiNtuplizer.elePFPUIso->at(j));
                if(tggHiNtuplizer.eleBC1E->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC1E_2_out.push_back(tggHiNtuplizer.eleBC1E->at(j));
                if(tggHiNtuplizer.eleBC1Eta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC1Eta_2_out.push_back(tggHiNtuplizer.eleBC1Eta->at(j));
                if(tggHiNtuplizer.eleBC2E->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC2E_2_out.push_back(tggHiNtuplizer.eleBC2E->at(j));
                if(tggHiNtuplizer.eleBC2Eta->size() == (unsigned)tdielectron.nEle_out)  tdielectron.eleBC2Eta_2_out.push_back(tggHiNtuplizer.eleBC2Eta->at(j));

                // dielectron
                if (tggHiNtuplizer.elePt->size()  == (unsigned)tdielectron.nEle_out &&
                    tggHiNtuplizer.eleEta->size() == (unsigned)tdielectron.nEle_out &&
                    tggHiNtuplizer.elePhi->size() == (unsigned)tdielectron.nEle_out)
                {
                    TLorentzVector v1, v2, vSum;
                    v1.SetPtEtaPhiM( tggHiNtuplizer.elePt->at(i), tggHiNtuplizer.eleEta->at(i),
                            tggHiNtuplizer.elePhi->at(i), tdielectron.mass);
                    v2.SetPtEtaPhiM( tggHiNtuplizer.elePt->at(j), tggHiNtuplizer.eleEta->at(j),
                            tggHiNtuplizer.elePhi->at(j), tdielectron.mass);
                    vSum = v1+v2;

                    tdielectron.diEleM_out.push_back(vSum.M());
                    tdielectron.diEleEn_out.push_back(vSum.Energy());
                    tdielectron.diElePt_out.push_back(vSum.Pt());
                    tdielectron.diEleEta_out.push_back(vSum.Eta());
                    tdielectron.diElePhi_out.push_back(vSum.Phi());
                }
            }
            else {
                tdielectron.eleCharge_1_out.push_back(tggHiNtuplizer.eleCharge->at(i));
                tdielectron.eleChargeConsistent_1_out.push_back(tggHiNtuplizer.eleChargeConsistent->at(i));
                tdielectron.eleEn_1_out.push_back(tggHiNtuplizer.eleEn->at(i));
                tdielectron.eleD0_1_out.push_back(tggHiNtuplizer.eleD0->at(i));
                tdielectron.eleDz_1_out.push_back(tggHiNtuplizer.eleDz->at(i));
                tdielectron.eleD0Err_1_out.push_back(tggHiNtuplizer.eleD0Err->at(i));
                tdielectron.eleDzErr_1_out.push_back(tggHiNtuplizer.eleDzErr->at(i));
                tdielectron.eleTrkPt_1_out.push_back(tggHiNtuplizer.eleTrkPt->at(i));
                tdielectron.eleTrkEta_1_out.push_back(tggHiNtuplizer.eleTrkEta->at(i));
                tdielectron.eleTrkPhi_1_out.push_back(tggHiNtuplizer.eleTrkPhi->at(i));
                tdielectron.eleTrkCharge_1_out.push_back(tggHiNtuplizer.eleTrkCharge->at(i));
                tdielectron.eleTrkChi2_1_out.push_back(tggHiNtuplizer.eleTrkChi2->at(i));
                tdielectron.eleTrkNdof_1_out.push_back(tggHiNtuplizer.eleTrkNdof->at(i));
                tdielectron.eleTrkNormalizedChi2_1_out.push_back(tggHiNtuplizer.eleTrkNormalizedChi2->at(i));
                tdielectron.elePt_1_out.push_back(tggHiNtuplizer.elePt->at(i));
                tdielectron.eleEta_1_out.push_back(tggHiNtuplizer.eleEta->at(i));
                tdielectron.elePhi_1_out.push_back(tggHiNtuplizer.elePhi->at(i));
                tdielectron.eleSCEn_1_out.push_back(tggHiNtuplizer.eleSCEn->at(i));
                tdielectron.eleESEn_1_out.push_back(tggHiNtuplizer.eleESEn->at(i));
                tdielectron.eleSCEta_1_out.push_back(tggHiNtuplizer.eleSCEta->at(i));
                tdielectron.eleSCPhi_1_out.push_back(tggHiNtuplizer.eleSCPhi->at(i));
                tdielectron.eleSCRawEn_1_out.push_back(tggHiNtuplizer.eleSCRawEn->at(i));
                tdielectron.eleSCEtaWidth_1_out.push_back(tggHiNtuplizer.eleSCEtaWidth->at(i));
                tdielectron.eleSCPhiWidth_1_out.push_back(tggHiNtuplizer.eleSCPhiWidth->at(i));
                tdielectron.eleHoverE_1_out.push_back(tggHiNtuplizer.eleHoverE->at(i));
                tdielectron.eleEoverP_1_out.push_back(tggHiNtuplizer.eleEoverP->at(i));
                tdielectron.eleEoverPInv_1_out.push_back(tggHiNtuplizer.eleEoverPInv->at(i));
                tdielectron.eleBrem_1_out.push_back(tggHiNtuplizer.eleBrem->at(i));
                tdielectron.eledEtaAtVtx_1_out.push_back(tggHiNtuplizer.eledEtaAtVtx->at(i));
                tdielectron.eledPhiAtVtx_1_out.push_back(tggHiNtuplizer.eledPhiAtVtx->at(i));
                tdielectron.eleSigmaIEtaIEta_1_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta->at(i));
                tdielectron.eleSigmaIEtaIEta_2012_1_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta_2012->at(i));
                tdielectron.eleSigmaIPhiIPhi_1_out.push_back(tggHiNtuplizer.eleSigmaIPhiIPhi->at(i));
                tdielectron.eleMissHits_1_out.push_back(tggHiNtuplizer.eleMissHits->at(i));
                tdielectron.eleESEffSigmaRR_1_out.push_back(tggHiNtuplizer.eleESEffSigmaRR->at(i));
                tdielectron.elePFChIso_1_out.push_back(tggHiNtuplizer.elePFChIso->at(i));
                tdielectron.elePFPhoIso_1_out.push_back(tggHiNtuplizer.elePFPhoIso->at(i));
                tdielectron.elePFNeuIso_1_out.push_back(tggHiNtuplizer.elePFNeuIso->at(i));
                tdielectron.elePFPUIso_1_out.push_back(tggHiNtuplizer.elePFPUIso->at(i));
                tdielectron.eleBC1E_1_out.push_back(tggHiNtuplizer.eleBC1E->at(i));
                tdielectron.eleBC1Eta_1_out.push_back(tggHiNtuplizer.eleBC1Eta->at(i));
                tdielectron.eleBC2E_1_out.push_back(tggHiNtuplizer.eleBC2E->at(i));
                tdielectron.eleBC2Eta_1_out.push_back(tggHiNtuplizer.eleBC2Eta->at(i));

                tdielectron.eleCharge_2_out.push_back(tggHiNtuplizer.eleCharge->at(j));
                tdielectron.eleChargeConsistent_2_out.push_back(tggHiNtuplizer.eleChargeConsistent->at(j));
                tdielectron.eleEn_2_out.push_back(tggHiNtuplizer.eleEn->at(j));
                tdielectron.eleD0_2_out.push_back(tggHiNtuplizer.eleD0->at(j));
                tdielectron.eleDz_2_out.push_back(tggHiNtuplizer.eleDz->at(j));
                tdielectron.eleD0Err_2_out.push_back(tggHiNtuplizer.eleD0Err->at(j));
                tdielectron.eleDzErr_2_out.push_back(tggHiNtuplizer.eleDzErr->at(j));
                tdielectron.eleTrkPt_2_out.push_back(tggHiNtuplizer.eleTrkPt->at(j));
                tdielectron.eleTrkEta_2_out.push_back(tggHiNtuplizer.eleTrkEta->at(j));
                tdielectron.eleTrkPhi_2_out.push_back(tggHiNtuplizer.eleTrkPhi->at(j));
                tdielectron.eleTrkCharge_2_out.push_back(tggHiNtuplizer.eleTrkCharge->at(j));
                tdielectron.eleTrkChi2_2_out.push_back(tggHiNtuplizer.eleTrkChi2->at(j));
                tdielectron.eleTrkNdof_2_out.push_back(tggHiNtuplizer.eleTrkNdof->at(j));
                tdielectron.eleTrkNormalizedChi2_2_out.push_back(tggHiNtuplizer.eleTrkNormalizedChi2->at(j));
                tdielectron.elePt_2_out.push_back(tggHiNtuplizer.elePt->at(j));
                tdielectron.eleEta_2_out.push_back(tggHiNtuplizer.eleEta->at(j));
                tdielectron.elePhi_2_out.push_back(tggHiNtuplizer.elePhi->at(j));
                tdielectron.eleSCEn_2_out.push_back(tggHiNtuplizer.eleSCEn->at(j));
                tdielectron.eleESEn_2_out.push_back(tggHiNtuplizer.eleESEn->at(j));
                tdielectron.eleSCEta_2_out.push_back(tggHiNtuplizer.eleSCEta->at(j));
                tdielectron.eleSCPhi_2_out.push_back(tggHiNtuplizer.eleSCPhi->at(j));
                tdielectron.eleSCRawEn_2_out.push_back(tggHiNtuplizer.eleSCRawEn->at(j));
                tdielectron.eleSCEtaWidth_2_out.push_back(tggHiNtuplizer.eleSCEtaWidth->at(j));
                tdielectron.eleSCPhiWidth_2_out.push_back(tggHiNtuplizer.eleSCPhiWidth->at(j));
                tdielectron.eleHoverE_2_out.push_back(tggHiNtuplizer.eleHoverE->at(j));
                tdielectron.eleEoverP_2_out.push_back(tggHiNtuplizer.eleEoverP->at(j));
                tdielectron.eleEoverPInv_2_out.push_back(tggHiNtuplizer.eleEoverPInv->at(j));
                tdielectron.eleBrem_2_out.push_back(tggHiNtuplizer.eleBrem->at(j));
                tdielectron.eledEtaAtVtx_2_out.push_back(tggHiNtuplizer.eledEtaAtVtx->at(j));
                tdielectron.eledPhiAtVtx_2_out.push_back(tggHiNtuplizer.eledPhiAtVtx->at(j));
                tdielectron.eleSigmaIEtaIEta_2_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta->at(j));
                tdielectron.eleSigmaIEtaIEta_2012_2_out.push_back(tggHiNtuplizer.eleSigmaIEtaIEta_2012->at(j));
                tdielectron.eleSigmaIPhiIPhi_2_out.push_back(tggHiNtuplizer.eleSigmaIPhiIPhi->at(j));
                tdielectron.eleMissHits_2_out.push_back(tggHiNtuplizer.eleMissHits->at(j));
                tdielectron.eleESEffSigmaRR_2_out.push_back(tggHiNtuplizer.eleESEffSigmaRR->at(j));
                tdielectron.elePFChIso_2_out.push_back(tggHiNtuplizer.elePFChIso->at(j));
                tdielectron.elePFPhoIso_2_out.push_back(tggHiNtuplizer.elePFPhoIso->at(j));
                tdielectron.elePFNeuIso_2_out.push_back(tggHiNtuplizer.elePFNeuIso->at(j));
                tdielectron.elePFPUIso_2_out.push_back(tggHiNtuplizer.elePFPUIso->at(j));
                tdielectron.eleBC1E_2_out.push_back(tggHiNtuplizer.eleBC1E->at(j));
                tdielectron.eleBC1Eta_2_out.push_back(tggHiNtuplizer.eleBC1Eta->at(j));
                tdielectron.eleBC2E_2_out.push_back(tggHiNtuplizer.eleBC2E->at(j));
                tdielectron.eleBC2Eta_2_out.push_back(tggHiNtuplizer.eleBC2Eta->at(j));

                // dielectron
                TLorentzVector v1, v2, vSum;
                v1.SetPtEtaPhiM( tggHiNtuplizer.elePt->at(i), tggHiNtuplizer.eleEta->at(i),
                        tggHiNtuplizer.elePhi->at(i), tdielectron.mass);
                v2.SetPtEtaPhiM( tggHiNtuplizer.elePt->at(j), tggHiNtuplizer.eleEta->at(j),
                        tggHiNtuplizer.elePhi->at(j), tdielectron.mass);
                vSum = v1+v2;

                tdielectron.diEleM_out.push_back(vSum.M());
                tdielectron.diEleEn_out.push_back(vSum.Energy());
                tdielectron.diElePt_out.push_back(vSum.Pt());
                tdielectron.diEleEta_out.push_back(vSum.Eta());
                tdielectron.diElePhi_out.push_back(vSum.Phi());
            }
        }
    }
}

#endif /* TREEHEADERS_DIELECTRONTREE_H_ */
