##### Configuration #####
# path to tree for signal and background
treePathSig = ggHiNtuplizerGED/EventTree
treePathBkg = ggHiNtuplizerGED/EventTree
# path to friend trees, friends will be added with an alias, 1st friend has alias "t0", 2nd friend has "t1", etc
var.string FRIENDTREES = {skimanalysis/HltTree, hiEvtAnalyzer/HiTree}
treeFriendPathsSig = $FRIENDTREES$
treeFriendPathsBkg = $FRIENDTREES$
# expressions for event dependent weights
var.string WEIGHTPTHATSIG = (15 <= t1.pthat && t1.pthat < 30) * 0.999082 + (30 <= t1.pthat && t1.pthat < 50) * 0.102211 + (50 <= t1.pthat && t1.pthat < 80) * 0.0218972 + (80 <= t1.pthat && t1.pthat < 120) * 0.00460337 + (120 <= t1.pthat && t1.pthat < 999999) * 0.0033236
var.string WEIGHTPTHATBKG = (30 <= t1.pthat && t1.pthat < 50) * 0.99987 + (50 <= t1.pthat && t1.pthat < 80) * 0.430414 + (80 <= t1.pthat && t1.pthat < 120) * 0.195464 + (120 <= t1.pthat && t1.pthat < 170) * 0.0736457 + (170 <= t1.pthat && t1.pthat < 999999) * 0.0226664
weightExpressionSig = $WEIGHTPTHATSIG$
weightExpressionBkg = $WEIGHTPTHATBKG$
var.string BRANCHES = nPho, pho*, nMC, mc*
var.string BRANCHESFRIEND = t0.pPAprimaryVertexFilter, t0.pBeamScrapingFilter, t1.vz
var.string ACTIVEBRANCHES = {$BRANCHES$, $BRANCHESFRIEND$}
# branches activated in signal and background trees
treeSigBranches = $ACTIVEBRANCHES$
treeBkgBranches = $ACTIVEBRANCHES$
# branches for spectators
treeSpectatorBranches = {phoEt, phoEta, phoPhi, phoSCEta, phoSCPhi, phoHoverE, pho_ecalClusterIsoR4, pho_hcalRechitIsoR4, pho_trackIsoR4PtCut20, pho_genMatchedIndex}
tmvaFactoryOptions = !V:!Silent:Color=False:DrawProgressBar:AnalysisType=Classification
# TMVA factory methods separated by ";;;".
tmvaMethods = $MLB$ { # <method_type>, <method_title>, <base_options>
                      kCuts, CutsGA, !H:!V:FitMethod=GA:EffMethod=EffSEl:PopSize=800:Steps=60 ;;;
                      kCuts, CutsSA, !H:!V:FitMethod=SA:EffSel:MaxCalls=150000:KernelTemp=IncAdaptive:InitialTemp=1e+6:MinTemp=1e-6:Eps=1e-10:UseDefaultScale ;;;
                      kLikelihood, Likelihood, H:!V:TransformOutput:PDFInterpol=Spline2:NSmoothSig[0]=20:NSmoothBkg[0]=20:NSmoothBkg[1]=10:NSmooth=1:NAvEvtPerBin=50 ;;;
                      kFisher, Fisher, H:!V:Fisher:VarTransform=None:CreateMVAPdfs:PDFInterpolMVAPdf=Spline2:NbinsMVAPdf=50:NsmoothMVAPdf=10
                    } $MLE$
var.string FRACTRAIN = 0.3333333
# fraction of events used in training
fracTrainEvtSig = $FRACTRAIN$
fracTrainEvtBkg = $FRACTRAIN$
var.string SELCOLL = t0.pPAprimaryVertexFilter > 0 && t0.pBeamScrapingFilter > 0
var.string SELEVENT = ($SELCOLL$ && abs(t1.vz) < 15)
var.string PRESELRECO = phoEt > 40 && abs(phoSCEta) < 1.48 && phoHoverE < 0.1
var.string PRESELGENMATCH = pho_genMatchedIndex > -1 && mcPID[pho_genMatchedIndex] == 22
var.string PRESELGENSIG = mcCalIsoDR04[pho_genMatchedIndex] < 5 && (abs(mcMomPID[pho_genMatchedIndex]) <= 22 || mcMomPID[pho_genMatchedIndex] == -999)
var.string PRESELGENBKG = !($PRESELGENSIG$)
# preselections for signal and background
preselectionSig = $PRESELRECO$ && $PRESELGENMATCH$ && $PRESELGENSIG$ && $SELEVENT$
preselectionBkg = $PRESELRECO$ && $PRESELGENMATCH$ && $PRESELGENBKG$ && $SELEVENT$
# variables used for classification, separated by ";;;"
trainVariables = $MLB$ { # <expression>, <type> (F/I), <VarProp> (NotEnforced/FSmart/FMin/FMax), <CutRangeMin>, <CutRangeMax>;;;
                         phoSigmaIEtaIEta_2012, F, FSmart, 0, 0.02;;;
                         sumIso := pho_ecalClusterIsoR4 + pho_hcalRechitIsoR4 + pho_trackIsoR4PtCut20, F, FSmart, -400, 50;;;
                       } $MLE$
#CONFIG-END#
