##### Cut Configuration #####
#CUTS-END#
##### input Configuration #####
## TH1
input.plotting.TH1_path = {h_fraction_frag_pho, h_fraction_pho_q, h_fraction_pho_g}   # use ;;; to separate histograms in different pads, eg. {h1, h2, h3;;; h4, h5} : h1,h2,h3 will be in 1st pad and h4,h5 will be in 2nd pad.
input.plotting.TH1error_path = {}     # contains the (statistical) bin errors for TH1_path, eg. {hErr1, ..., hErr5}
input.plotting.TH1sysp_path = {}      # contains upwards (plus) systematics for TH1_path, eg. {hSysUp1, ..., hSysUp5}
input.plotting.TH1sysm_path = {}      # contains downwards (minus) systematics for TH1_path, eg. {hSysDown1, ..., hSysDown5}
input.plotting.TH1_scale = {}  # use ; to separate scaling input, eg. {8.3; [2, bin=7, 0.8]; 1; 1; [3, x=110, 5.9]} scales h1 by 8.3, h2 to 0.8*h3 at bin=7 of h3, h5 to 5.9*h4 at x=110
input.plotting.TH1_rebin = {}
input.plotting.TH1_norm = {}   # sets the normalization of the individual histograms if a positive value is specified, overwrites the affect of drawNormalized and TH1_scale
input.plotting.TH1_title = $NULL$
input.plotting.TH1_titleX = 
input.plotting.TH1_titleY = Event Fraction
input.plotting.titleOffsetX = 1.25
input.plotting.titleOffsetY = 2
input.plotting.centerTitleX = 1   # 1 to center x-axis title
input.plotting.centerTitleY = 1   # 1 to center y-axis title
input.plotting.TH1_xMin = 30
input.plotting.TH1_xMax = 9999
input.plotting.TH1_yMin = 0 
input.plotting.TH1_yMax = 1.4
input.plotting.drawNormalized = 0   # 0, 1
## TH1 - drawing styles
input.plotting.drawOption = {stack0 hist, stack0 hist, stack0 hist}      # {hist, ...}, Use "stackj" to plot the TH1 in the "j"th THStack
input.plotting.markerStyle = {}     # {kFullCircle, kOpenCircle, kFullSquare, kOpenSquare, kDot, kPlus, kStar, ...}
input.plotting.markerSize = 1
input.plotting.lineStyle = {}       # {kSolid, kDashed, kDotted, kDashDotted}
input.plotting.lineWidth = 3        # integer
input.plotting.fillStyle = {}       # {kFDotted1, kFDotted3, kFHatched1, kFHatched4, kFWicker, kFBricks, ...}
input.plotting.color = {kRed, kBlack, kBlue}           # {kBlack, kBlue, kRed, kOrange, kViolet, kCyan, kSpring, kYellow, kAzure, kPink, kGreen, kMagenta, kTeal, ...}
input.plotting.fillColor = {kRed, kBlack, kBlue}
input.plotting.fillAlpha = {0.4}
input.plotting.lineColor = {}

##
## TF1
input.plotting.fitTH1 = 0
input.plotting.TF1 = {}           # {gaus, -2.5, 2.5 , gaus, 0, 2} corresponds to 2 TF1 functions
input.plotting.fitOption = {}     # {RL M ,Q R }
input.plotting.fitColor = {}
##
## Legend
input.plotting.legendEntryLabel = {Fragmentation \gamma;; \gamma+quark;; \gamma+gluon}
input.plotting.legendPosition = NW    # NE, NW, SE or SW 
input.plotting.legendOffsetX = 0.04     # 0.04
input.plotting.legendOffsetY = 0.04     # 0.04
input.plotting.legendBorderSize = 0
input.plotting.legendWidth = 0.4
input.plotting.legendHeight = 0
input.plotting.legendTextSize = 0
##
## TLatex
input.plotting.text = {PYTHIA 8;; pp \rightarrow \gamma + X}
input.plotting.textFont = 43
input.plotting.textSize = 32
input.plotting.textPosition = NE    # NE, NW, SE or SW
input.plotting.textOffsetX = 0.04
input.plotting.textOffsetY = 0.08
##
## TLatex above Pad
input.plotting.textAbovePad = {CMS Simulation Supplementary;; \sqrt{s} = 5.02 TeV}          # {CMS Preliminary \sqrt{s_{NN}} = 5.02 TeV;; 404 \mub^{-1} (PbPb)}
input.plotting.textAbovePadAlign = {11, 31}     # {11, 31} = {left-bottom, right-bottom}
input.plotting.textAbovePadFont = {43}        # 43
input.plotting.textAbovePadSize = 30        # 20
input.plotting.textAbovePadOffsetX = 0.01
input.plotting.textAbovePadOffsetY = 0.01     # 0.02
##
## TLine
input.plotting.TLine_horizontal = {}          # y-axis positions of the horizontal lines to be drawn
input.plotting.lineStyle_horizontal = {}      # {kDashed, kSolid, kDotted, kDashDotted}
input.plotting.TLine_vertical = {}            # x-axis positions of the vertical lines to be drawn
input.plotting.lineStyle_vertical = {}        # {kDashed, kSolid, kDotted, kDashDotted}
##
## Canvas
input.plotting.windowWidth = 800     # current object sizes correspond to a 600x600, might need to resize objects if window size changes
input.plotting.windowHeight = 800
input.plotting.rows = 1           # integer
input.plotting.columns = 1        # integer
input.plotting.setLogx = 0        # integer
input.plotting.setLogy = 0        # integer
input.plotting.frameWidth = 0.8     # fractional width of the frame inside Canvas
input.plotting.frameHeight = 0.8
input.plotting.leftMargin = 0.17
input.plotting.rightMargin = 0.05
input.plotting.bottomMargin = 0.15
input.plotting.topMargin = 0.05
input.plotting.xMargin = 0.01
input.plotting.yMargin = 0.01
##
## TH1 arithmetic
input.plotting.drawRatio = 0 
input.plotting.drawDiff = 0 
input.plotting.windowHeightFraction = 0.25
input.plotting.TH1_titleY_lowerPad =     # DATA / MC
input.plotting.TH1_yMin_lowerPad = 0
input.plotting.TH1_yMax_lowerPad = 0
input.plotting.TLine_horizontal_lowerPad = {}          # y-axis positions of the horizontal lines to be drawn in the lower pad
input.plotting.lineStyle_horizontal_lowerPad = {}      # {kDashed, kSolid, kDotted, kDashDotted}
input.plotting.TLine_vertical_lowerPad = {}            # x-axis positions of the vertical lines to be drawn in the lower pad
input.plotting.lineStyle_vertical_lowerPad = {}        # {kDashed, kSolid, kDotted, kDashDotted}
## TF1 lower Pad
input.plotting.fitTH1_lowerPad = 0
input.plotting.TF1_lowerPad = {}           # {gaus, -2.5, 2.5 , gaus, 0, 2} corresponds to 2 TF1 functions
input.plotting.fitOption_lowerPad = {}     # {RL M ,Q R }
input.plotting.fitColor_lowerPad = {}
##
##
#INPUT-END#
#FILELIST#
./Data/photonJetJS/mc_photon_event_fraction.root
#FILELIST-END#
