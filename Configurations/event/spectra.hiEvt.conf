## ./Performance/drawSpectra.exe Configurations/hiEvt/spectra.hiEvt.conf <input> Configurations/hiEvt/<output>.root Configurations/hiEvt/<output>.png &> Configurations/hiEvt/<output>.log &
###
##### Cut Configuration #####
#CUTS-END#
##### input Configuration #####
var.string EVENTSEL = pcollisionEventSelection > 0
var.string EVENTSELPP = pPAprimaryVertexFilter > 0 && pBeamScrapingFilter > 0
var.string EVENTSELPA = pPAprimaryVertexFilter > 0 && pBeamScrapingFilter > 0 && HLT_PAL1MinimumBiasHF_AND_SinglePixelTrack_v1 > 0
var.string SELECTIONS = {1==1, abs(vz)<15}
var.string EVENTSELSPLITTER = {1==1, $EVENTSEL$}
var.string EVENTSELSPLITTERLEGEND = {no selection, event selection}
var.string COLORSPLITTER = {kBlack, kBlue}
var.string MARKERSPLITTER = {kFullCircle, kOpenSquare}
##
input.performance.mode = 0     # 0 = no mode, 1 = comparison
## TTree
input.performance.treePath = {hiEvtAnalyzer/HiTree}
input.performance.treeFriendPath = {ggHiNtuplizer/EventTree, skimanalysis/HltTree}
input.performance.treeFriendPathIndividual = {}     # ith element in that list is friend only to the ith tree in treePath list
input.performance.treeFormula = {vz, hiBin}
input.performance.treeSelectionBase = 
input.performance.treeSelection = $SELECTIONS$
input.performance.treeSelectionSplitter = $EVENTSELSPLITTER$
input.performance.TH1_weight = {}
## TH1
input.performance.TH1_title = $SELECTIONS$
input.performance.TH1_titleX = {vz (cm) ;; hiBin}
input.performance.TH1_titleY = {\frac{1}{N} \frac{dN}{dvz};;     $NEWLINE$
                                \frac{1}{N} \frac{dN}{dhiBin}      $NEWLINE$
                               }
input.performance.TH1D_Bins_List = {40, -20, 20,  $NEWLINE$
                                    20, 0  , 200  $NEWLINE$
                                   }  # nBins, xLow, xUp for a TH1D histogram
input.performance.binsLogScaleX = 0
input.performance.titleOffsetX = 1.25  # 1
input.performance.titleOffsetY = 2     # 1
input.performance.TH1_yMin = 0 
input.performance.TH1_yMax = 0 
input.performance.drawSame = 2         # 0, 1, 2, 3     2 = drawSameAcrossSplits, 3 = drawSameInsideSplits
input.performance.drawNormalized = 1   # 0, 1, 2
input.performance.drawOption = {}      # {hist, ...}
input.performance.markerStyle = $MARKERSPLITTER$     # {kFullCircle, kOpenCircle, kFullSquare, kOpenSquare, kDot, kPlus, kStar, ...}
input.performance.markerSize = 1.25
input.performance.lineStyle = {}       # {kSolid, kDashed, kDotted, kDashDotted}
input.performance.lineWidth = 1        # integer
input.performance.fillStyle = {}       # {kFDotted1, kFDotted3, kFHatched1, kFHatched4, kFWicker, kFBricks, ...}
input.performance.color = $COLORSPLITTER$           # {kBlack, kBlue, kRed, kOrange, kViolet, kCyan, kSpring, kYellow, kAzure, kPink, kGreen, kMagenta, kTeal, ...}
input.performance.fillColor = {}
input.performance.lineColor = {}
## Legend
input.performance.legendEntryLabel = $EVENTSELSPLITTERLEGEND$
input.performance.legendPosition = NE    # NE, NW, SE or SW 
input.performance.legendOffsetX = 0.04     # 0.04
input.performance.legendOffsetY = 0.04     # 0.04
input.performance.legendBorderSize = 0
input.performance.legendWidth = 0.3
input.performance.legendHeight = 0
input.performance.legendTextSize = 0
##
## TLatex
input.performance.text = {}
input.performance.textFont = 43
input.performance.textSize = 20
input.performance.textPosition =     # NE, NW, SE or SW
input.performance.textOffsetX = 0.04
input.performance.textOffsetY = 0.04
##
## TLatex above Pad
input.performance.textAbovePad = {}          # {CMS Preliminary \sqrt{s_{NN}} = 5.02 TeV;; 404 \mub^{-1} (PbPb)}
input.performance.textAbovePadAlign = {}     # {11, 31} = {left-bottom, right-bottom}
input.performance.textAbovePadFont =         # 43
input.performance.textAbovePadSize =         # 20
input.performance.textAbovePadOffsetX =
input.performance.textAbovePadOffsetY =      # 0.02
##
## TLine
input.performance.TLine_horizontal = {}          # y-axis positions of the horizontal lines to be drawn
input.performance.lineStyle_horizontal = {}      # {kDashed, kSolid, kDotted, kDashDotted}
input.performance.TLine_vertical = {}            # x-axis positions of the vertical lines to be drawn
input.performance.lineStyle_vertical = {}        # {kDashed, kSolid, kDotted, kDashDotted}
##
## Canvas
input.performance.windowWidth = 800     # current object sizes correspond to a 600x600, might need to resize objects if window size changes
input.performance.windowHeight = 800
input.performance.setLogx = 0        # integer
input.performance.setLogy = 0        # integer
input.performance.leftMargin = 0.17
input.performance.rightMargin = 0.05
input.performance.bottomMargin = 0.15
input.performance.topMargin = 0.05
##
#INPUT-END#
