## ./Performance/drawSpectra2D.exe Configurations/photons/spectra2D.photon.spike.conf <input> Configurations/photons/<output>.root Configurations/photons/<output>.png &> Configurations/photons/<output>.log &
###
##### Cut Configuration #####
#CUTS-END#
##### input Configuration #####
## variables
var.string EVENTSEL = pcollisionEventSelection > 0
var.string EVENTSELPP = pPAprimaryVertexFilter > 0 && pBeamScrapingFilter > 0
var.string SELECTIONS = { phoEt>10, phoEt>10 && phoSigmaIEtaIEta_2012>0.002, phoEt>20, phoEt>20 && phoSigmaIEtaIEta_2012>0.002 , phoEt>40, phoEt>40 && phoSigmaIEtaIEta_2012>0.002 }
var.string ECALSPLITTER = { abs(phoEta)<1.44, abs(phoEta)>=1.4791 && abs(phoEta)<2.4 , abs(phoEta)>=1.4791 && abs(phoEta)<2, abs(phoEta)>=2 && abs(phoEta)<2.4}
var.string ECALSPLITTERLEGEND = { Barrel : |\eta| < 1.44, Endcap : 1.48 < |\eta| < 2.4, Endcap1 : 1.48 < |\eta| < 2, Endcap2 : 2 < |\eta| < 2.4 }
## TTree
input.performance.treePath = {ggHiNtuplizer/EventTree}
input.performance.treeFriendPath = {hiEvtAnalyzer/HiTree, hltanalysis/HltTree, skimanalysis/HltTree}
input.performance.treeFormula = {pho_swissCrx:pho_seedTime}
input.performance.treeSelectionBase = $EVENTSEL$
input.performance.treeSelection = $SELECTIONS$
input.performance.treeSelectionSplitter = $ECALSPLITTER$
input.performance.TH1_weight = {}
## TH1
input.performance.TH1_title = $SELECTIONS$
input.performance.TH1_titleX = {seed time (ns)}
input.performance.TH1_titleY = {Swiss cross (1-E4/E1)}
input.performance.TH2D_Bins_List = {200, -15, 15, 200, -2, 2}  # nBinsx, xLow, xUp, nBinsy, yLow, yUp for a TH2D histogram
input.performance.titleOffsetX = 1.25
input.performance.titleOffsetY = 2
input.performance.drawNormalized = 2   # 0, 1, 2
input.performance.drawOption = {colz}      # {colz, ...}
input.performance.markerStyle = {}     # {kFullCircle, kOpenCircle, kFullSquare, kOpenSquare, kDot, kPlus, kStar, ...}
input.performance.markerSize = 1.25
input.performance.lineStyle = {}       # {kSolid, kDashed, kDotted, kDashDotted}
input.performance.lineWidth = 1        # integer
input.performance.fillStyle = {}       # {kFDotted1, kFDotted3, kFHatched1, kFHatched4, kFWicker, kFBricks, ...}
input.performance.color = {}           # {kBlack, kBlue, kRed, kOrange, kViolet, kCyan, kSpring, kYellow, kAzure, kPink, kGreen, kMagenta, kTeal, ...}
input.performance.fillColor = {}
input.performance.lineColor = {}
## Legend
input.performance.legendEntryLabel = {}
input.performance.legendPosition =     # NE, NW, SE or SW 
input.performance.legendOffsetX =      # 0.04
input.performance.legendOffsetY =      # 0.04
input.performance.legendBorderSize = 0
input.performance.legendWidth = 0
input.performance.legendHeight = 0
input.performance.legendTextSize = 0
##
## TLatex
input.performance.text = {}
input.performance.textFont = 43
input.performance.textSize = 20
input.performance.textPosition =     # NE, NW, SE or SW
input.performance.textOffsetX = 0.04
input.performance.textOffsetY = 0.04
##
## TLatex above Pad
input.performance.textAbovePad = {}          # {CMS Preliminary \sqrt{s_{NN}} = 5.02 TeV;; 440 \mub^{-1} (PbPb)}
input.performance.textAbovePadAlign = {}     # {11, 31} = {left-bottom, right-bottom}
input.performance.textAbovePadFont =         # 43
input.performance.textAbovePadSize =         # 20
input.performance.textAbovePadOffsetX =
input.performance.textAbovePadOffsetY =      # 0.02
##
## TLine
input.performance.TLine_horizontal = {1, 0.9}          # y-axis positions of the horizontal lines to be drawn
input.performance.lineStyle_horizontal = {kSolid, kDashed}      # {kDashed, kSolid, kDotted, kDashDotted}
input.performance.TLine_vertical = {-3, 3}            # x-axis positions of the vertical lines to be drawn
input.performance.lineStyle_vertical = {kDashed, kDashed}        # {kDashed, kSolid, kDotted, kDashDotted}
##
## Canvas
input.performance.windowWidth = 800     # current object sizes correspond to a 600x600, might need to resize objects if window size changes
input.performance.windowHeight = 800
input.performance.setLogx = 0        # integer
input.performance.setLogy = 0        # integer
input.performance.setLogz = 0        # integer
input.performance.leftMargin = 0.17
input.performance.rightMargin = 0.05
input.performance.bottomMargin = 0.15
input.performance.topMargin = 0.05
##
#INPUT-END#
